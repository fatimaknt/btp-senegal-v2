import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Link } from 'react-router-dom';
import { motion } from 'framer-motion';
import { MapPin, Phone, Star, Clock, CheckCircle, ExternalLink, Mail } from 'lucide-react';
import { Card, CardContent } from '../ui/Card';
import Button from '../ui/Button';
import { formatPhoneNumber, formatRating } from '../../lib/utils';
const EnterpriseCard = ({ enterprise, showDistance = false, distance, compact = false }) => {
    const isOpen = () => {
        const now = new Date();
        const currentDay = now.toLocaleDateString('en', { weekday: 'long' }).toLowerCase();
        const daySchedule = enterprise.working_hours[currentDay];
        if (!daySchedule.isOpen)
            return false;
        const currentTime = now.getHours() * 60 + now.getMinutes();
        const openTime = daySchedule.openTime ?
            parseInt(daySchedule.openTime.split(':')[0]) * 60 + parseInt(daySchedule.openTime.split(':')[1]) : 0;
        const closeTime = daySchedule.closeTime ?
            parseInt(daySchedule.closeTime.split(':')[0]) * 60 + parseInt(daySchedule.closeTime.split(':')[1]) : 0;
        return currentTime >= openTime && currentTime <= closeTime;
    };
    const renderRating = () => (_jsxs("div", { className: "flex items-center space-x-1", children: [_jsx("div", { className: "flex items-center", children: [...Array(5)].map((_, i) => (_jsx(Star, { className: `h-4 w-4 ${i < Math.floor(enterprise.rating)
                        ? 'text-yellow-400 fill-current'
                        : 'text-gray-300'}` }, i))) }), _jsx("span", { className: "text-sm font-medium text-gray-700", children: formatRating(enterprise.rating) }), _jsxs("span", { className: "text-sm text-gray-500", children: ["(", enterprise.review_count, " avis)"] })] }));
    if (compact) {
        return (_jsx(Card, { hover: true, className: "enterprise-card", children: _jsx(CardContent, { className: "p-4", children: _jsxs("div", { className: "flex items-start space-x-3", children: [enterprise.logo_url && (_jsx("img", { src: enterprise.logo_url, alt: `Logo ${enterprise.name}`, className: "w-12 h-12 rounded-lg object-cover flex-shrink-0" })), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-semibold text-gray-900 truncate", children: enterprise.name }), _jsx("p", { className: "text-sm text-primary font-medium", children: enterprise.category.name })] }), enterprise.is_verified && (_jsx(CheckCircle, { className: "h-5 w-5 text-green-500 flex-shrink-0" }))] }), _jsxs("div", { className: "flex items-center space-x-2 mt-1 text-sm text-gray-600", children: [_jsx(MapPin, { className: "h-4 w-4" }), _jsx("span", { className: "truncate", children: enterprise.city }), showDistance && distance && (_jsxs(_Fragment, { children: [_jsx("span", { children: "\u2022" }), _jsx("span", { children: distance < 1000 ? `${Math.round(distance)}m` : `${(distance / 1000).toFixed(1)}km` })] }))] }), renderRating()] })] }) }) }));
    }
    return (_jsx(motion.div, { whileHover: { y: -5 }, transition: { duration: 0.2 }, children: _jsxs(Card, { className: "enterprise-card overflow-hidden", children: [enterprise.images.length > 0 && (_jsxs("div", { className: "relative h-48 overflow-hidden", children: [_jsx("img", { src: enterprise.images[0], alt: enterprise.name, className: "w-full h-full object-cover" }), enterprise.is_verified && (_jsxs("div", { className: "absolute top-3 right-3 bg-green-500 text-white px-2 py-1 rounded-full text-xs font-medium flex items-center space-x-1", children: [_jsx(CheckCircle, { className: "h-3 w-3" }), _jsx("span", { children: "Certifi\u00E9" })] })), _jsxs("div", { className: `absolute top-3 left-3 px-2 py-1 rounded-full text-xs font-medium flex items-center space-x-1 ${isOpen()
                                ? 'bg-green-500 text-white'
                                : 'bg-red-500 text-white'}`, children: [_jsx(Clock, { className: "h-3 w-3" }), _jsx("span", { children: isOpen() ? 'Ouvert' : 'Ferm√©' })] })] })), _jsxs(CardContent, { className: "p-6", children: [_jsxs("div", { className: "flex items-start space-x-3 mb-4", children: [enterprise.logo_url && (_jsx("img", { src: enterprise.logo_url, alt: `Logo ${enterprise.name}`, className: "w-16 h-16 rounded-lg object-cover flex-shrink-0" })), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsx("h3", { className: "text-xl font-semibold text-gray-900 mb-1", children: enterprise.name }), _jsx("p", { className: "text-primary font-medium mb-2", children: enterprise.category.name }), renderRating()] })] }), _jsx("p", { className: "text-gray-600 text-sm mb-4 line-clamp-2", children: enterprise.description }), _jsxs("div", { className: "space-y-2 mb-4", children: [_jsxs("div", { className: "flex items-center text-sm text-gray-600", children: [_jsx(MapPin, { className: "h-4 w-4 mr-2 text-gray-400" }), _jsxs("span", { children: [enterprise.address, ", ", enterprise.city] }), showDistance && distance && (_jsxs("span", { className: "ml-2 text-primary font-medium", children: ["(", distance < 1000 ? `${Math.round(distance)}m` : `${(distance / 1000).toFixed(1)}km`, ")"] }))] }), _jsxs("div", { className: "flex items-center text-sm text-gray-600", children: [_jsx(Phone, { className: "h-4 w-4 mr-2 text-gray-400" }), _jsx("span", { children: formatPhoneNumber(enterprise.phone) })] }), enterprise.email && (_jsxs("div", { className: "flex items-center text-sm text-gray-600", children: [_jsx(Mail, { className: "h-4 w-4 mr-2 text-gray-400" }), _jsx("span", { children: enterprise.email })] }))] }), enterprise.services.length > 0 && (_jsx("div", { className: "mb-4", children: _jsxs("div", { className: "flex flex-wrap gap-1", children: [enterprise.services.slice(0, 3).map((service, index) => (_jsx("span", { className: "inline-block bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-full", children: service }, index))), enterprise.services.length > 3 && (_jsxs("span", { className: "inline-block bg-gray-100 text-gray-500 text-xs px-2 py-1 rounded-full", children: ["+", enterprise.services.length - 3, " autres"] }))] }) })), _jsxs("div", { className: "flex space-x-2", children: [_jsx(Link, { to: `/entreprise/${enterprise.id}`, className: "flex-1", children: _jsx(Button, { className: "w-full", size: "sm", children: "Voir le profil" }) }), enterprise.website && (_jsx(Button, { variant: "outline", size: "sm", onClick: () => window.open(enterprise.website, '_blank'), rightIcon: ExternalLink, children: "Site web" }))] })] })] }) }));
};
export default EnterpriseCard;
